// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String? @unique// 휴대폰으로 로그인 시 email 존재 안할 수 있음
  password String? // SNS 로그인 시 비밀번호 존재 안할 수 있음
  phone String? @unique
  github_id String? @unique
  avatar String? // github 프로필 이미지
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  SMSToken SMSToken[]
}


model SMSToken {
  id Int @id @default(autoincrement())
  token String @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  /*
    Cascade: 부모 데이터가 삭제될 때 자식 데이터도 함께 삭제됨. User가 삭제될 때 SMSToken도 함께 삭제되도록 함.
    SetNull: 부모 데이터가 삭제될 때 자식 데이터의 부모 참조(user, userId) 를 null로 설정함. user, userId 둘 다 optional로 설정해야 함.
    NoAction: 부모 데이터가 삭제될 때 자식 데이터에 대한 액션을 하지 않음.
    Restrict: 부모 레코드가 참조되고 있는 동안 삭제 불가. SMSToken이 user와 연결되어 있는 동안 삭제 불가.
    Default: 부모 데이터가 삭제될 때 자식 데이터의 기본값을 사용함.
  */
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) //* 실제로는 user가 저장되지 않는다. 아래 userId만 저장됨.
  userId Int //* User와 SMSToken 연결
}

